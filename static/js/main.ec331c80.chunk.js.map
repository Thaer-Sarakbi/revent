{"version":3,"sources":["features/event/EventList/EventListAttendee.js","features/event/EventList/EventListItem.js","features/event/EventList/EventList.js","features/event/eventActions.js","features/event/eventConstants.js","features/event/EventDashboard/EventDashboard.js","features/nav/Menus/SignedOutMenu.js","features/nav/Menus/SignedInMenu.js","features/nav/NavBar/NavBar.js","features/home/HomePage.js","features/event/EventDetailed/EventDetailedHeader.js","features/event/EventDetailed/EventDetailedInfo.js","features/event/EventDetailed/EventDetailedChat.js","features/event/EventDetailed/EventDetailedSidebar.js","features/event/EventDetailed/EventDetailedPage.js","features/user/PeopleDashboard/PeopleDashboard.js","features/user/UserDetailed/UserDetailedPage.js","features/user/Settings/SettingsNav.js","features/user/Settings/BasicPage.js","features/user/Settings/AboutPage.js","features/user/Settings/PhotosPage.js","features/user/Settings/AccountPage.js","features/user/Settings/SettingsDashboard.js","features/event/EventForm/EventForm.js","app/layout/App.js","serviceWorker.js","features/event/eventReducer.js","app/common/util/reducerUtil.js","app/reducers/rootReducer.js","app/common/util/scrollToTop.js","index.js"],"names":["EventListAttendee","attendee","this","props","List","Item","Image","as","size","circular","src","photoURL","Component","EventListItem","event","deleteEvent","Segment","Group","hostPhotoURL","Content","Header","title","Description","hostedBy","Icon","name","date","venue","secondary","horizontal","attendees","map","key","id","clearing","description","Button","onClick","color","floated","content","Link","to","EventList","events","createEvent","type","payload","updateEvent","EventDashboard","handleCreateFormOpen","setState","isOpen","selectedEvent","handleDeleteEvent","Grid","Column","width","connect","state","eventId","SignedOutMenu","signIn","Menu","position","basic","inverted","style","marginLeft","SignedInMenu","signOut","avatar","spaced","Dropdown","pointing","text","icon","NavBar","authenticated","handleSignIn","handleSignOut","history","push","fixed","Container","NavLink","exact","header","alt","positive","withRouter","HomePage","textAlign","vertical","className","marginBottom","eventImageStyle","filter","eventImageTextStyle","bottom","left","height","EventDetailedHeader","attached","padding","category","fluid","EventDetailedInfo","verticalAlign","EventDetailedChat","border","Comment","Avatar","Author","Metadata","Text","Actions","Action","Form","reply","TextArea","labelPosition","primary","EventDetailedSidebar","length","relaxed","divided","ownProps","match","params","PeopleDashboard","UserDetailedPage","SettingsNav","BasicPage","AboutPage","PhotosPage","AccountPage","SettingsDashboard","from","path","component","EventForm","handleFormSubmit","e","preventDefault","newEvent","Math","random","handleInputChange","target","value","city","onSubmit","autoComplete","Field","onChange","placeholder","goBack","App","render","location","EventDetailedPage","Boolean","window","hostname","createReducer","initialState","fnMap","handler","rootReducer","combineReducers","eventReducer","ScrollToTop","prevProps","scrollTo","children","rootEl","document","getElementById","store","createStore","ReactDOM","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.ec331c80.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\nimport { List, Image } from 'semantic-ui-react'\r\n\r\nclass EventListAttendee extends Component {\r\n    render() {\r\n        const {attendee} = this.props\r\n        return (\r\n            <List.Item>\r\n              <Image as='a' size='mini' circular src={attendee.photoURL} />\r\n            </List.Item>\r\n        )\r\n    }\r\n}\r\n\r\nexport default EventListAttendee","import React, { Component } from 'react'\r\nimport { Segment, Item, Icon, List, Button } from 'semantic-ui-react'\r\nimport EventListAttendee from './EventListAttendee'\r\nimport { Link } from 'react-router-dom'\r\n\r\nclass EventListItem extends Component {\r\n    render() {\r\n        const {event, deleteEvent} = this.props\r\n        return (     \r\n            <Segment.Group>\r\n                <Segment>\r\n                    <Item.Group>\r\n                        <Item>\r\n                            <Item.Image size=\"tiny\" circular src= {event.hostPhotoURL} />\r\n                            <Item.Content>\r\n                                <Item.Header>{event.title}</Item.Header>\r\n                                <Item.Description>\r\n                                Hosted by {event.hostedBy}\r\n                                </Item.Description>\r\n                            </Item.Content>\r\n                        </Item>\r\n                    </Item.Group>\r\n                </Segment>\r\n                <Segment>\r\n                    <span>\r\n                        <Icon name=\"clock\" /> {event.date} |\r\n                        <Icon name=\"marker\" /> {event.venue}\r\n                    </span>\r\n                </Segment>\r\n                <Segment secondary>\r\n                    <List horizontal>\r\n                        {event.attendees && event.attendees.map(attendee => (\r\n                            <EventListAttendee key={attendee.id} attendee={attendee} />\r\n                        ))}\r\n                    </List>\r\n                </Segment>\r\n                <Segment clearing>\r\n                   <span>{event.description}</span>\r\n                   <Button onClick={() => deleteEvent(event.id)} as=\"a\" color=\"red\" floated=\"right\" content=\"Delete\" />\r\n                   <Button as={Link} to={`/events/${event.id}`} color=\"teal\" floated=\"right\" content=\"View\" />\r\n                </Segment>\r\n            </Segment.Group>\r\n        )\r\n    }\r\n}\r\n\r\nexport default EventListItem","import React, { Component, Fragment } from 'react'\r\nimport EventListItem from './EventListItem'\r\n\r\nclass EventList extends Component {\r\n    render() {\r\n        const {events, deleteEvent} = this.props\r\n        return (\r\n            <Fragment>\r\n              {events.map(event => (\r\n                <EventListItem \r\n                  key={event.id} \r\n                  event={event} \r\n                  deleteEvent={deleteEvent}/>\r\n              ))}\r\n            </Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nexport default EventList","import { CREATE_EVENT, UPDATE_EVENT, DELETE_EVENT } from './eventConstants'\r\n\r\nexport const createEvent = (event) => {\r\n    return{\r\n        type: CREATE_EVENT,\r\n        payload: {\r\n            event\r\n        }\r\n    }\r\n}\r\n\r\nexport const updateEvent = (event) => {\r\n    return{\r\n        type: UPDATE_EVENT,\r\n        payload: {\r\n            event\r\n        }\r\n    }\r\n}\r\n\r\nexport const deleteEvent = (eventId) => {\r\n    return{\r\n        type: DELETE_EVENT,\r\n        payload: {\r\n            eventId\r\n        }\r\n    }\r\n}","export const CREATE_EVENT = 'CREATE_EVENT'\r\nexport const UPDATE_EVENT = 'UPDATE_EVENT'\r\nexport const DELETE_EVENT = 'DELETE_EVENT'","import React, { Component } from 'react'\r\nimport { Grid } from 'semantic-ui-react'\r\nimport EventList from '../EventList/EventList'\r\nimport { connect } from 'react-redux'\r\nimport {createEvent, updateEvent, deleteEvent} from '../eventActions'\r\n\r\nclass EventDashboard extends Component {\r\n    \r\n    handleCreateFormOpen = () => {\r\n      this.setState({\r\n        isOpen: true,\r\n        selectedEvent: null\r\n      })\r\n    }\r\n    \r\n    /*\r\n    handleFormCancel = () => {\r\n      this.setState({\r\n        isOpen: false\r\n      })\r\n    }\r\n    */\r\n    /*\r\n    handleCreateEvent = (newEvent) => {\r\n      newEvent.id = Math.random()\r\n      newEvent.hostPhotoURL = '/assets/user.png'\r\n      this.props.createEvent(newEvent)\r\n    }\r\n    */\r\n    /*\r\n    handleSelectEvent = (evt, event) => {\r\n      //console.log(evt)\r\n      //console.log(event)\r\n      this.setState({\r\n        selectedEvent: event,\r\n        isOpen: true\r\n      })\r\n    }\r\n    */\r\n    /*\r\n    handleUpdateEvent = (updatedEvent) => {\r\n      this.props.updateEvent(updatedEvent)\r\n    }\r\n    */\r\n   \r\n    handleDeleteEvent = (id) => {\r\n      /*\r\n      this.setState(({events}) => ({\r\n        events: events.filter(e => e.id !== id)\r\n      }))\r\n      */\r\n     this.props.deleteEvent(id)\r\n    }\r\n\r\n    render() {\r\n        //const { isOpen, selectedEvent} = this.state\r\n        const {events} = this.props\r\n        return (\r\n            <Grid>\r\n               <Grid.Column width={10}>\r\n                 <EventList \r\n                   events={events} \r\n                   deleteEvent={this.handleDeleteEvent}/>\r\n               </Grid.Column>\r\n               <Grid.Column width={6}>\r\n                 <h2>Activity Feed</h2>\r\n               </Grid.Column>\r\n            </Grid>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapState = (state) => ({\r\n  events: state.events\r\n})\r\n\r\nexport default connect(mapState, {createEvent, updateEvent, deleteEvent})(EventDashboard)","import React from 'react'\r\nimport { Menu, Button } from 'semantic-ui-react'\r\n\r\nconst SignedOutMenu = ({signIn}) => {\r\n    return (\r\n        <Menu.Item position=\"right\">\r\n          <Button onClick={signIn} basic inverted content=\"Login\" />\r\n          <Button basic inverted content=\"Register\" style={{marginLeft: '0.5em'}} />\r\n        </Menu.Item>\r\n    )\r\n}\r\n\r\nexport default SignedOutMenu","import React from 'react'\r\nimport { Menu, Image, Dropdown } from 'semantic-ui-react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nconst SignedInMenu = ({signOut}) => {\r\n    return (\r\n        <Menu.Item position=\"right\">\r\n            <Image avatar spaced=\"right\" src='/assets/user.png' />\r\n            <Dropdown pointing=\"top left\" text=\"Username\">\r\n                <Dropdown.Menu>\r\n                    <Dropdown.Item text=\"Create Event\" icon=\"plus\" />\r\n                    <Dropdown.Item text=\"My Events\" icon=\"calendar\" />\r\n                    <Dropdown.Item text=\"My Network\" icon=\"users\" />\r\n                    <Dropdown.Item text=\"My Profile\" icon=\"user\" />\r\n                    <Dropdown.Item as={Link} to='/settings' text=\"Settings\" icon=\"settings\" />\r\n                    <Dropdown.Item onClick={signOut} text=\"Sign Out\" icon=\"power\" />\r\n                </Dropdown.Menu>\r\n            </Dropdown>\r\n        </Menu.Item>\r\n    )\r\n}\r\n\r\nexport default SignedInMenu","import React, { Component } from 'react'\r\nimport { Menu, Container, Button } from 'semantic-ui-react'\r\nimport { NavLink, Link, withRouter } from 'react-router-dom'\r\nimport SignedOutMenu from '../Menus/SignedOutMenu'\r\nimport SignedInMenu from '../Menus/SignedInMenu'\r\n\r\nclass NavBar extends Component {\r\n    state = {\r\n        authenticated: true\r\n    }\r\n\r\n    handleSignIn = () => this.setState({ authenticated: true })\r\n    handleSignOut = () => {\r\n        this.setState({ authenticated: false })\r\n        this.props.history.push('/')\r\n    }\r\n\r\n    render() {\r\n        const {authenticated} = this.state\r\n        return (\r\n            <Menu inverted fixed=\"top\">\r\n            <Container>\r\n                <Menu.Item as={NavLink} exact to='/' header>\r\n                    <img src=\"/assets/logo.png\" alt=\"logo\" />\r\n                    Re-vents\r\n                </Menu.Item>\r\n                <Menu.Item as={NavLink} exact to='/events' name=\"Events\" />\r\n                <Menu.Item as={NavLink} to='/people' name=\"people\" />\r\n                <Menu.Item>\r\n                  <Button as={Link} to='/createEvent' floated=\"right\" positive inverted content=\"Create Event\" />\r\n                </Menu.Item>\r\n                {authenticated ? (\r\n                    <SignedInMenu signOut={this.handleSignOut} /> \r\n                    ) : (\r\n                    <SignedOutMenu signIn={this.handleSignIn} />\r\n                )}\r\n            </Container>\r\n            </Menu>\r\n        )\r\n    }\r\n}\r\n\r\nexport default withRouter(NavBar)","import React from 'react'\r\nimport { Segment, Container, Header, Image, Button, Icon } from 'semantic-ui-react'\r\n\r\nconst HomePage = ({history}) => {\r\n    return(\r\n      <Segment inverted textAlign='center' vertical className='masthead'>\r\n      <Container text>\r\n        <Header as='h1' inverted>\r\n          <Image\r\n            size='massive'\r\n            src='/assets/logo.png'\r\n            alt='logo'\r\n            style={{ marginBottom: 12 }}\r\n          />\r\n          Re-vents\r\n        </Header>\r\n        <Button onClick ={() => history.push('/events')}size='huge' inverted>\r\n          Get started\r\n          <Icon name='right arrow' inverted />\r\n        </Button>\r\n      </Container>\r\n    </Segment>\r\n    )\r\n}\r\n\r\nexport default HomePage","import React from 'react'\r\nimport { Segment, Image, Item, Header, Button } from 'semantic-ui-react'\r\nimport { Link } from 'react-router-dom';\r\n\r\n\r\nconst eventImageStyle = {\r\n    filter: 'brightness(30%)'\r\n};\r\n\r\nconst eventImageTextStyle = {\r\n    position: 'absolute',\r\n    bottom: '5%',\r\n    left: '5%',\r\n    width: '100%',\r\n    height: 'auto',\r\n    color: 'white'\r\n};\r\n\r\nconst EventDetailedHeader = ({event}) => {\r\n    return (\r\n        <Segment.Group>\r\n        <Segment basic attached=\"top\" style={{ padding: '0' }}>\r\n            <Image src={`/assets/categoryImages/${event.category}.jpg`} fluid style={eventImageStyle} />\r\n\r\n            <Segment basic style={eventImageTextStyle}>\r\n            <Item.Group>\r\n                <Item>\r\n                <Item.Content>\r\n                    <Header\r\n                    size=\"huge\"\r\n                    content={event.title}\r\n                    style={{ color: 'white' }}\r\n                    />\r\n                    <p>{event.date}</p>\r\n                    <p>\r\n                    Hosted by <strong>{event.hostedBy}</strong>\r\n                    </p>\r\n                </Item.Content>\r\n                </Item>\r\n            </Item.Group>\r\n            </Segment>\r\n        </Segment>\r\n\r\n        <Segment attached=\"bottom\">\r\n            <Button>Cancel My Place</Button>\r\n            <Button color=\"teal\">JOIN THIS EVENT</Button>\r\n\r\n            <Button as={Link} to={`/manage/${event.id}`} color=\"orange\" floated=\"right\">\r\n            Manage Event\r\n            </Button>\r\n        </Segment>\r\n        </Segment.Group>\r\n    )\r\n}\r\n\r\nexport default EventDetailedHeader","import React from 'react'\r\nimport { Segment, Grid, Icon, Button } from 'semantic-ui-react'\r\n\r\nconst EventDetailedInfo = ({event}) => {\r\n    return (\r\n       <Segment.Group>\r\n       <Segment attached=\"top\">\r\n         <Grid>\r\n           <Grid.Column width={1}>\r\n             <Icon size=\"large\" color=\"teal\" name=\"info\" />\r\n           </Grid.Column>\r\n           <Grid.Column width={15}>\r\n             <p>{event.description}</p>\r\n           </Grid.Column>\r\n         </Grid>\r\n       </Segment>\r\n       <Segment attached>\r\n         <Grid verticalAlign=\"middle\">\r\n           <Grid.Column width={1}>\r\n             <Icon name=\"calendar\" size=\"large\" color=\"teal\" />\r\n           </Grid.Column>\r\n           <Grid.Column width={15}>\r\n             <span>{event.date}</span>\r\n           </Grid.Column>\r\n         </Grid>\r\n       </Segment>\r\n       <Segment attached>\r\n         <Grid verticalAlign=\"middle\">\r\n           <Grid.Column width={1}>\r\n             <Icon name=\"marker\" size=\"large\" color=\"teal\" />\r\n           </Grid.Column>\r\n           <Grid.Column width={11}>\r\n             <span>{event.venue}</span>\r\n           </Grid.Column>\r\n           <Grid.Column width={4}>\r\n             <Button color=\"teal\" size=\"tiny\" content=\"Show Map\" />\r\n           </Grid.Column>\r\n         </Grid>\r\n       </Segment>\r\n     </Segment.Group>\r\n    )\r\n}\r\n\r\nexport default EventDetailedInfo","import React, { Fragment } from 'react'\r\nimport { Segment, Comment, Header, Form, Button } from 'semantic-ui-react'\r\n\r\nconst EventDetailedChat = () => {\r\n    return (      \r\n        <Fragment>\r\n        <Segment\r\n        textAlign=\"center\"\r\n        attached=\"top\"\r\n        inverted\r\n        color=\"teal\"\r\n        style={{ border: 'none' }}\r\n        >\r\n        <Header>Chat about this event</Header>\r\n        </Segment>\r\n\r\n        <Segment attached>\r\n        <Comment.Group>\r\n            <Comment>\r\n            <Comment.Avatar src=\"/assets/user.png\" />\r\n            <Comment.Content>\r\n                <Comment.Author as=\"a\">Matt</Comment.Author>\r\n                <Comment.Metadata>\r\n                <div>Today at 5:42PM</div>\r\n                </Comment.Metadata>\r\n                <Comment.Text>How artistic!</Comment.Text>\r\n                <Comment.Actions>\r\n                <Comment.Action>Reply</Comment.Action>\r\n                </Comment.Actions>\r\n            </Comment.Content>\r\n            </Comment>\r\n\r\n            <Comment>\r\n            <Comment.Avatar src=\"/assets/user.png\" />\r\n            <Comment.Content>\r\n                <Comment.Author as=\"a\">Elliot Fu</Comment.Author>\r\n                <Comment.Metadata>\r\n                <div>Yesterday at 12:30AM</div>\r\n                </Comment.Metadata>\r\n                <Comment.Text>\r\n                <p>\r\n                    This has been very useful for my research. Thanks as well!\r\n                </p>\r\n                </Comment.Text>\r\n                <Comment.Actions>\r\n                <Comment.Action>Reply</Comment.Action>\r\n                </Comment.Actions>\r\n            </Comment.Content>\r\n            <Comment.Group>\r\n                <Comment>\r\n                <Comment.Avatar src=\"/assets/user.png\" />\r\n                <Comment.Content>\r\n                    <Comment.Author as=\"a\">Jenny Hess</Comment.Author>\r\n                    <Comment.Metadata>\r\n                    <div>Just now</div>\r\n                    </Comment.Metadata>\r\n                    <Comment.Text>Elliot you are always so right :)</Comment.Text>\r\n                    <Comment.Actions>\r\n                    <Comment.Action>Reply</Comment.Action>\r\n                    </Comment.Actions>\r\n                </Comment.Content>\r\n                </Comment>\r\n            </Comment.Group>\r\n            </Comment>\r\n\r\n            <Comment>\r\n            <Comment.Avatar src=\"/assets/user.png\" />\r\n            <Comment.Content>\r\n                <Comment.Author as=\"a\">Joe Henderson</Comment.Author>\r\n                <Comment.Metadata>\r\n                <div>5 days ago</div>\r\n                </Comment.Metadata>\r\n                <Comment.Text>Dude, this is awesome. Thanks so much</Comment.Text>\r\n                <Comment.Actions>\r\n                <Comment.Action>Reply</Comment.Action>\r\n                </Comment.Actions>\r\n            </Comment.Content>\r\n            </Comment>\r\n\r\n            <Form reply>\r\n            <Form.TextArea />\r\n            <Button\r\n                content=\"Add Reply\"\r\n                labelPosition=\"left\"\r\n                icon=\"edit\"\r\n                primary\r\n            />\r\n            </Form>\r\n        </Comment.Group>\r\n        </Segment>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default EventDetailedChat","import React from 'react'\r\nimport { Segment, List, Item, Label } from 'semantic-ui-react'\r\n\r\nconst EventDetailedSidebar = ({attendees}) => {\r\n    const isHost = false\r\n    return (\r\n        <div>\r\n        <Segment\r\n            textAlign=\"center\"\r\n            style={{ border: 'none' }}\r\n            attached=\"top\"\r\n            secondary\r\n            inverted\r\n            color=\"teal\"\r\n        >\r\n            {attendees && attendees.length} {attendees && attendees.length === 1 ? 'Person' : 'People'} Going\r\n        </Segment>\r\n        <Segment attached>\r\n            <List relaxed divided>\r\n            {attendees && attendees.map((attendee) => (\r\n                <Item key={attendee.id} style={{ position: 'relative' }}>\r\n                {isHost &&\r\n                <Label\r\n                    style={{ position: 'absolute' }}\r\n                    color=\"orange\"\r\n                    ribbon=\"right\"\r\n                    >\r\n                    Host\r\n                </Label>}\r\n                <Item.Image size=\"tiny\" src={attendee.photoURL} />\r\n                <Item.Content verticalAlign=\"middle\">\r\n                <Item.Header as=\"h3\">\r\n                    {attendee.name}\r\n                </Item.Header>\r\n                </Item.Content>\r\n                </Item>\r\n            ))}\r\n            </List>\r\n        </Segment>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default EventDetailedSidebar","import React from 'react'\r\nimport { Grid } from 'semantic-ui-react'\r\nimport EventDetailedHeader from './EventDetailedHeader'\r\nimport EventDetailedInfo from './EventDetailedInfo'\r\nimport EventDetailedChat from './EventDetailedChat'\r\nimport EventDetailedSidebar from './EventDetailedSidebar'\r\nimport { connect } from 'react-redux'\r\n\r\nconst EventDetailedPage = ({event}) => {\r\n    return(\r\n        <Grid>\r\n          <Grid.Column width={10}>\r\n            <EventDetailedHeader event={event} />\r\n            <EventDetailedInfo event={event} />\r\n            <EventDetailedChat />\r\n          </Grid.Column>\r\n          <Grid.Column width={6}>\r\n            <EventDetailedSidebar attendees={event.attendees} />\r\n          </Grid.Column>\r\n        </Grid>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n   const eventId = ownProps.match.params.id\r\n\r\n   let event = {}\r\n\r\n   if(eventId && state.events.length > 0){\r\n     event = state.events.filter(event => event.id === eventId)[0]\r\n   }\r\n\r\n   return{\r\n     event\r\n   }\r\n}\r\nexport default connect(mapStateToProps)(EventDetailedPage)","import React from 'react'\r\n\r\nconst PeopleDashboard = () => {\r\n    return(\r\n        <div>\r\n          <h1>People Dashboard</h1>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PeopleDashboard","import React from 'react'\r\n\r\nconst UserDetailedPage = () => {\r\n    return(\r\n        <div>\r\n          <h1>User Detailed Page</h1>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default UserDetailedPage","import React, { Fragment } from 'react'\r\nimport { Menu, Header } from 'semantic-ui-react'\r\nimport { NavLink } from 'react-router-dom'\r\n\r\nconst SettingsNav = () => {\r\n    return(     \r\n      <Fragment>\r\n        <Menu vertical>\r\n          <Header icon=\"user\" attached inverted color=\"grey\" content=\"Profile\" />\r\n          <Menu.Item as={NavLink} to='/settings/basic'>Basics</Menu.Item>\r\n          <Menu.Item as={NavLink} to='/settings/about'>About Me</Menu.Item>\r\n          <Menu.Item as={NavLink} to='/settings/photos'>My Photos</Menu.Item>\r\n        </Menu>\r\n        <Menu vertical>\r\n          <Header\r\n            icon=\"settings\"\r\n            attached\r\n            inverted\r\n            color=\"grey\"\r\n            content=\"Account\"\r\n          />\r\n          <Menu.Item as={NavLink} to='/settings/account'>My Account</Menu.Item>\r\n        </Menu>\r\n    </Fragment>\r\n    )\r\n}\r\n\r\nexport default SettingsNav","import React from 'react'\r\n\r\nconst BasicPage = () => {\r\n    return(\r\n        <div>\r\n          <h1>Basic Page</h1>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default BasicPage","import React from 'react'\r\n\r\nconst AboutPage = () => {\r\n    return(\r\n        <div>\r\n          <h1>About Page</h1>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AboutPage","import React from 'react'\r\n\r\nconst PhotosPage = () => {\r\n    return(\r\n        <div>\r\n          <h1>Photos Page</h1>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PhotosPage","import React from 'react'\r\n\r\nconst AccountPage = () => {\r\n    return(\r\n        <div>\r\n          <h1>Account Page</h1>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AccountPage","import React from 'react'\r\nimport { Grid } from 'semantic-ui-react'\r\nimport SettingsNav from './SettingsNav'\r\nimport { Route, Redirect, Switch } from 'react-router-dom'\r\nimport BasicPage from './BasicPage'\r\nimport AboutPage from './AboutPage'\r\nimport PhotosPage from './PhotosPage'\r\nimport AccountPage from './AccountPage'\r\n\r\nconst SettingsDashboard = () => {\r\n    return(\r\n        <Grid>\r\n          <Grid.Column width={12}>\r\n            <Switch>\r\n              <Redirect exact from='/settings' to='/settings/basic' />\r\n              <Route path='/settings/basic' component={BasicPage} />\r\n              <Route path='/settings/about' component={AboutPage} />\r\n              <Route path='/settings/photos' component={PhotosPage} />\r\n              <Route path='/settings/account' component={AccountPage} />\r\n            </Switch>\r\n          </Grid.Column>\r\n          <Grid.Column width={4}>\r\n            <SettingsNav />\r\n          </Grid.Column>\r\n        </Grid>\r\n    )\r\n}\r\n\r\nexport default SettingsDashboard","import React, { Component } from 'react'\r\nimport { Segment, Form, Button } from 'semantic-ui-react'\r\nimport { connect } from 'react-redux'\r\nimport { createEvent, updateEvent } from '../eventActions'\r\n\r\nclass EventForm extends Component {\r\n    state = {\r\n      ...this.props.event\r\n    }\r\n\r\n    componentDidMount(){\r\n      if(this.props.selectedEvent !== null){\r\n        this.setState({\r\n          ...this.props.selectedEvent\r\n        })\r\n      }\r\n    }\r\n\r\n    handleFormSubmit = (e) => {\r\n      e.preventDefault()\r\n      if(this.state.id){\r\n        this.props.updateEvent(this.state)\r\n        this.props.history.push(`/events/${this.state.id}`)\r\n      } else {\r\n        const newEvent = {\r\n         ...this.state,\r\n         id: Math.random(),\r\n         hostPhotoURL: '/assets/user.png'\r\n        }\r\n        this.props.createEvent(newEvent)\r\n        this.props.history.push(`/events`)\r\n      }\r\n    }\r\n\r\n    handleInputChange = (e) => {\r\n      this.setState({\r\n        [e.target.name]: e.target.value\r\n      })\r\n    }\r\n\r\n    render() {\r\n        //const {cancelFormOpen} = this.props\r\n        const {title, date, city, venue, hostedBy} = this.state\r\n\r\n        return (\r\n            <Segment>\r\n              <Form onSubmit={this.handleFormSubmit} autoComplete = 'off'>\r\n                <Form.Field>\r\n                  <label>Event Title</label>\r\n                  <input name='title' onChange={this.handleInputChange} value={title} placeholder=\"Event Title\" />\r\n                </Form.Field>\r\n                <Form.Field>\r\n                  <label>Event Date</label>\r\n                  <input name='date' onChange={this.handleInputChange} value={date} type=\"date\" placeholder=\"Event Date\" />\r\n                </Form.Field>\r\n                <Form.Field>\r\n                  <label>City</label>\r\n                  <input name='city' onChange={this.handleInputChange} value={city} placeholder=\"City event is taking place\" />\r\n                </Form.Field>\r\n                <Form.Field>\r\n                  <label>Venue</label>\r\n                  <input name='venue' onChange={this.handleInputChange} value={venue} placeholder=\"Enter the Venue of the event\" />\r\n                </Form.Field>\r\n                <Form.Field>\r\n                  <label>Hosted By</label>\r\n                  <input name='hostedBy' onChange={this.handleInputChange} value={hostedBy} placeholder=\"Enter the name of person hosting\" />\r\n                </Form.Field>\r\n                <Button positive type=\"submit\">\r\n                  Submit\r\n                </Button>\r\n                <Button onClick={this.props.history.goBack} type=\"button\">Cancel</Button>\r\n              </Form>\r\n            </Segment>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n  const eventId = ownProps.match.params.id\r\n\r\n  let event = {\r\n      title: '',\r\n      date: '',\r\n      city: '',\r\n      venue: '',\r\n      hostedBy: ''\r\n    }\r\n\r\n    if(eventId && state.events.length > 0){\r\n      event = state.events.filter(event => event.id === eventId)[0]\r\n    }\r\n\r\n    return{\r\n      event\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps,{ createEvent, updateEvent })(EventForm)","import React, { Fragment, Component } from 'react';\nimport EventDashboard from '../../features/event/EventDashboard/EventDashboard'\nimport NavBar from '../../features/nav/NavBar/NavBar'\nimport { Container } from 'semantic-ui-react';\nimport { Route, Switch, withRouter } from 'react-router-dom';\nimport HomePage from '../../features/home/HomePage'\nimport EventDetailedPage from '../../features/event/EventDetailed/EventDetailedPage'\nimport PeopleDashboard from '../../features/user/PeopleDashboard/PeopleDashboard'\nimport UserDetailedPage from '../../features/user/UserDetailed/UserDetailedPage'\nimport SettingsDashboard from '../../features/user/Settings/SettingsDashboard'\nimport EventForm from '../../features/event/EventForm/EventForm'\n\nclass App extends Component {\n  render(){\n    return (\n      <Fragment>\n        <Route exact path='/' component={HomePage} />\n        <Route\n          path='/(.+)'\n          render={() => (\n            <Fragment>\n              <NavBar />\n              <Container className='main'>\n                <Switch key={this.props.location.key}>\n                  <Route exact path='/events' component={EventDashboard} />\n                  <Route path='/events/:id' component={EventDetailedPage} />\n                  <Route path='/people' component={PeopleDashboard} />\n                  <Route path='/profile/:id' component={UserDetailedPage} />\n                  <Route path='/settings' component={SettingsDashboard} />\n                  <Route path={['/createEvent', '/manage/:id']} component={EventForm} />\n                </Switch>\n              </Container>\n            </Fragment>\n          )}\n        />\n      </Fragment>\n    );\n  }\n}\n\nexport default withRouter(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import { createReducer } from '../../app/common/util/reducerUtil'\r\nimport { CREATE_EVENT, UPDATE_EVENT, DELETE_EVENT } from './eventConstants'\r\n\r\nconst initialState = [\r\n    {\r\n      id: '1',\r\n      title: 'Trip to Tower of London',\r\n      date: '2018-03-27',\r\n      category: 'culture',\r\n      description:\r\n        'Lorem ipsum dolor sit amet, consectetur adipiscing elit. Phasellus sollicitudin ligula eu leo tincidunt, quis scelerisque magna dapibus. Sed eget ipsum vel arcu vehicula ullamcorper.',\r\n      city: 'London, UK',\r\n      venue: \"Tower of London, St Katharine's & Wapping, London\",\r\n      hostedBy: 'Bob',\r\n      hostPhotoURL: 'https://randomuser.me/api/portraits/men/20.jpg',\r\n      attendees: [\r\n        {\r\n          id: 'a',\r\n          name: 'Bob',\r\n          photoURL: 'https://randomuser.me/api/portraits/men/20.jpg'\r\n        },\r\n        {\r\n          id: 'b',\r\n          name: 'Tom',\r\n          photoURL: 'https://randomuser.me/api/portraits/men/22.jpg'\r\n        }\r\n      ]\r\n    },\r\n    {\r\n      id: '2',\r\n      title: 'Trip to Punch and Judy Pub',\r\n      date: '2018-03-28',\r\n      category: 'drinks',\r\n      description:\r\n        'Lorem ipsum dolor sit amet, consectetur adipiscing elit. Phasellus sollicitudin ligula eu leo tincidunt, quis scelerisque magna dapibus. Sed eget ipsum vel arcu vehicula ullamcorper.',\r\n      city: 'London, UK',\r\n      venue: 'Punch & Judy, Henrietta Street, London, UK',\r\n      hostedBy: 'Tom',\r\n      hostPhotoURL: 'https://randomuser.me/api/portraits/men/22.jpg',\r\n      attendees: [\r\n        {\r\n          id: 'b',\r\n          name: 'Tom',\r\n          photoURL: 'https://randomuser.me/api/portraits/men/22.jpg'\r\n        },\r\n        {\r\n          id: 'a',\r\n          name: 'Bob',\r\n          photoURL: 'https://randomuser.me/api/portraits/men/20.jpg'\r\n        }\r\n      ]\r\n    }\r\n  ]\r\n\r\n  const createEvent = (state, payload) => {\r\n      return [...state, payload.event]\r\n  }\r\n\r\n  const updateEvent = (state, payload) => {\r\n    return [\r\n        ...state.filter(event => event.id !== payload.event.id), payload.event\r\n    ]\r\n}\r\n\r\nconst deleteEvent = (state, payload) => {\r\n    return [\r\n        ...state.filter(event => event.id !== payload.eventId)\r\n    ]\r\n}\r\n\r\nexport default createReducer(initialState, {\r\n    [CREATE_EVENT]: createEvent,\r\n    [UPDATE_EVENT]: updateEvent, \r\n    [DELETE_EVENT]: deleteEvent\r\n})","export const createReducer = (initialState, fnMap) => {\r\n    return (state=initialState, {type, payload}) => {\r\n        const handler = fnMap[type]\r\n\r\n        return handler ? handler(state, payload): state\r\n    }\r\n}","import { combineReducers } from 'redux'\r\nimport eventReducer from \"../../features/event/eventReducer\"\r\n\r\nconst rootReducer = combineReducers({\r\n    events: eventReducer\r\n})\r\n\r\nexport default rootReducer","import { Component } from 'react'\r\nimport { withRouter } from 'react-router-dom'\r\n\r\nclass ScrollToTop extends Component {\r\n    componentDidUpdate(prevProps) {\r\n      if (\r\n        this.props.location !== prevProps.location\r\n      ) {\r\n        window.scrollTo(0, 0);\r\n      }\r\n    }\r\n  \r\n    render() {\r\n      return this.props.children;\r\n    }\r\n  }\r\n  \r\n  export default withRouter(ScrollToTop);","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './app/layout/App';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter } from 'react-router-dom';\nimport { createStore } from 'redux'\nimport rootReducer from './app/reducers/rootReducer';\nimport { Provider } from 'react-redux'\nimport ScrollToTop from './app/common/util/scrollToTop'\n\n/*\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n*/\n\nconst rootEl = document.getElementById('root')\nconst store = createStore(rootReducer)\n\nlet render = () => {\n  ReactDOM.render(\n    <BrowserRouter>\n     <Provider store={store}>\n      <ScrollToTop>\n       <App />\n      </ScrollToTop>\n     </Provider>\n    </BrowserRouter>, rootEl)\n}\nrender()\n\nserviceWorker.unregister();"],"sourceRoot":""}